//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Components.Rotation componentsRotation { get { return (Components.Rotation)GetComponent(GameComponentsLookup.ComponentsRotation); } }
    public bool hasComponentsRotation { get { return HasComponent(GameComponentsLookup.ComponentsRotation); } }

    public void AddComponentsRotation(float newAngel) {
        var index = GameComponentsLookup.ComponentsRotation;
        var component = (Components.Rotation)CreateComponent(index, typeof(Components.Rotation));
        component.Angel = newAngel;
        AddComponent(index, component);
    }

    public void ReplaceComponentsRotation(float newAngel) {
        var index = GameComponentsLookup.ComponentsRotation;
        var component = (Components.Rotation)CreateComponent(index, typeof(Components.Rotation));
        component.Angel = newAngel;
        ReplaceComponent(index, component);
    }

    public void RemoveComponentsRotation() {
        RemoveComponent(GameComponentsLookup.ComponentsRotation);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherComponentsRotation;

    public static Entitas.IMatcher<GameEntity> ComponentsRotation {
        get {
            if (_matcherComponentsRotation == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ComponentsRotation);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherComponentsRotation = matcher;
            }

            return _matcherComponentsRotation;
        }
    }
}
